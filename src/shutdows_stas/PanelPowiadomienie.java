/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shutdows_stas;

import java.util.Calendar;
import java.util.Date;
import javax.swing.JButton;
import javax.swing.JPanel;

/**
 *
 * @author Stas
 */
public class PanelPowiadomienie extends javax.swing.JPanel
{
    private final OknoGlowne oknoGlowne;
    private final Funkcje funkcje;
    private int timeToSec, sprawdzOpoznienie;
    private javax.swing.Timer sprPowiadomienie;
    private javax.swing.Timer odliczanie;
    private Calendar calendar;
    private OknoPowiadomienie okno;

    /**
     * Creates new form PanelPowiadomienie
     */
    public PanelPowiadomienie(OknoGlowne oknoGlowne1)
    {
        initComponents();
        
        oknoGlowne = oknoGlowne1;
        funkcje = new Funkcje(oknoGlowne);
        
        calendar = Calendar.getInstance();
        spinnerPowiadomienie2.setValue(funkcje.getPrefMin());
        spinnerPowiadomienie1.setValue(funkcje.getPrefGodz());
        spinnerPowiadomienie4.setValue(calendar.get(Calendar.HOUR_OF_DAY));
        spinnerPowiadomienie5.setValue(calendar.get(Calendar.MINUTE));
        
        sprPowiadomienie = new javax.swing.Timer(1000, (e) ->
                {
                });
        odliczanie = new javax.swing.Timer(1000, (e) ->
                {
                });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        radioPowiadomienieGroup = new javax.swing.ButtonGroup();
        radioPowiadomienie3 = new javax.swing.JRadioButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        spinnerPowiadomienie4 = new javax.swing.JSpinner();
        radioPowiadomienie1 = new javax.swing.JRadioButton();
        jLabel28 = new javax.swing.JLabel();
        spinnerPowiadomienie1 = new javax.swing.JSpinner();
        spinnerPowiadomienie5 = new javax.swing.JSpinner();
        radioPowiadomienie2 = new javax.swing.JRadioButton();
        spinnerPowiadomienieData = new javax.swing.JSpinner();
        spinnerPowiadomienie3 = new javax.swing.JSpinner();
        spinnerPowiadomienie2 = new javax.swing.JSpinner();
        jLabel32 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        buttonZatrzymaj = new javax.swing.JButton();
        buttonUruchom = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        checkPowiadomienieKomunikat = new javax.swing.JCheckBox();
        checkPowiadomienieZapetlij = new javax.swing.JCheckBox();
        checkPowiadomienieDzwiek = new javax.swing.JCheckBox();
        textPowiadomienieKomunikat = new javax.swing.JTextField();
        checkPowiadomienieSamDzwiek = new javax.swing.JCheckBox();

        radioPowiadomienieGroup.add(radioPowiadomienie3);
        radioPowiadomienie3.setText("Z data");
        radioPowiadomienie3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                radioPowiadomienie3ActionPerformed(evt);
            }
        });

        jLabel30.setText("Godzina");

        jLabel31.setText("Godzina");

        jLabel29.setText("Minuta");

        spinnerPowiadomienie4.setModel(new javax.swing.SpinnerNumberModel(0, 0, 24, 1));
        spinnerPowiadomienie4.setEnabled(false);

        radioPowiadomienieGroup.add(radioPowiadomienie1);
        radioPowiadomienie1.setSelected(true);
        radioPowiadomienie1.setText("Od teraz za:");
        radioPowiadomienie1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                radioPowiadomienie1ActionPerformed(evt);
            }
        });

        jLabel28.setText("Minuta");

        spinnerPowiadomienie1.setModel(new javax.swing.SpinnerNumberModel(0, 0, 24, 1));

        spinnerPowiadomienie5.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));
        spinnerPowiadomienie5.setEnabled(false);

        radioPowiadomienieGroup.add(radioPowiadomienie2);
        radioPowiadomienie2.setText("O godzinie:");
        radioPowiadomienie2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                radioPowiadomienie2ActionPerformed(evt);
            }
        });

        spinnerPowiadomienieData.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1494964560000L), null, new java.util.Date(System.currentTimeMillis()+39536000000L), java.util.Calendar.HOUR));
        spinnerPowiadomienieData.setEnabled(false);

        spinnerPowiadomienie3.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));

        spinnerPowiadomienie2.setModel(new javax.swing.SpinnerNumberModel(0, 0, 60, 1));

        jLabel32.setText("Sekund");
        jLabel32.setToolTipText("");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jLabel1.setText("Okresl czas");

        jLabel2.setText("Wybierz zadanie");

        jPanel1.setBackground(new java.awt.Color(0, 115, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(623, 60));

        buttonZatrzymaj.setText("Zatrzymaj");
        buttonZatrzymaj.setVisible(false);
        buttonZatrzymaj.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                buttonZatrzymajActionPerformed(evt);
            }
        });

        buttonUruchom.setText("Uruchom");
        buttonUruchom.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                buttonUruchomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonZatrzymaj, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonUruchom, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonZatrzymaj, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonUruchom, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setMinimumSize(new java.awt.Dimension(174, 173));
        jPanel2.setPreferredSize(new java.awt.Dimension(174, 175));

        checkPowiadomienieKomunikat.setText("Komunikat");
        checkPowiadomienieKomunikat.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        checkPowiadomienieKomunikat.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                checkPowiadomienieKomunikatActionPerformed(evt);
            }
        });

        checkPowiadomienieZapetlij.setText("Zapetlij");
        checkPowiadomienieZapetlij.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        checkPowiadomienieDzwiek.setText("Dzwiek");
        checkPowiadomienieDzwiek.setToolTipText("Wyswietl powiadomienie z dzwiekiem");
        checkPowiadomienieDzwiek.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        textPowiadomienieKomunikat.setText("Komunikat");
        textPowiadomienieKomunikat.setMaximumSize(new java.awt.Dimension(150, 32));
        textPowiadomienieKomunikat.setMinimumSize(new java.awt.Dimension(150, 32));
        textPowiadomienieKomunikat.setPreferredSize(new java.awt.Dimension(150, 32));
        textPowiadomienieKomunikat.setVisible(false);

        checkPowiadomienieSamDzwiek.setText("Sam dzwiek");
        checkPowiadomienieSamDzwiek.setToolTipText("Sam sygnal dzwiekowy ");
        checkPowiadomienieSamDzwiek.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        checkPowiadomienieSamDzwiek.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                checkPowiadomienieSamDzwiekActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkPowiadomienieSamDzwiek)
                    .addComponent(checkPowiadomienieZapetlij)
                    .addComponent(checkPowiadomienieKomunikat)
                    .addComponent(checkPowiadomienieDzwiek))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(textPowiadomienieKomunikat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(checkPowiadomienieSamDzwiek)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkPowiadomienieDzwiek)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkPowiadomienieZapetlij)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkPowiadomienieKomunikat)
                .addGap(18, 18, 18)
                .addComponent(textPowiadomienieKomunikat, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioPowiadomienie3)
                    .addComponent(radioPowiadomienie2)
                    .addComponent(radioPowiadomienie1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinnerPowiadomienieData, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(spinnerPowiadomienie4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerPowiadomienie5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel29))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(spinnerPowiadomienie1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerPowiadomienie2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerPowiadomienie3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel32)))))
                .addGap(83, 83, 83))
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel2)
                        .addGap(50, 50, 50)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {spinnerPowiadomienie1, spinnerPowiadomienie2, spinnerPowiadomienie3, spinnerPowiadomienie4, spinnerPowiadomienie5});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(radioPowiadomienie1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(spinnerPowiadomienie2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel28)
                                    .addComponent(spinnerPowiadomienie3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel32))
                                .addGap(18, 18, 18))
                            .addComponent(spinnerPowiadomienie1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(radioPowiadomienie2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinnerPowiadomienie4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31)
                            .addComponent(spinnerPowiadomienie5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29))
                        .addGap(18, 18, 18)
                        .addComponent(radioPowiadomienie3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerPowiadomienieData, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)))
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {spinnerPowiadomienie1, spinnerPowiadomienie2, spinnerPowiadomienie3, spinnerPowiadomienie4, spinnerPowiadomienie5});

    }// </editor-fold>//GEN-END:initComponents

    private void radioPowiadomienie3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_radioPowiadomienie3ActionPerformed
    {//GEN-HEADEREND:event_radioPowiadomienie3ActionPerformed
        spinnerPowiadomienie1.setEnabled(false);
        spinnerPowiadomienie2.setEnabled(false);
        spinnerPowiadomienie3.setEnabled(false);
        spinnerPowiadomienie4.setEnabled(false);
        spinnerPowiadomienie5.setEnabled(false);
        spinnerPowiadomienieData.setEnabled(true);
        checkPowiadomienieZapetlij.setEnabled(false);
        checkPowiadomienieZapetlij.setSelected(false);
    }//GEN-LAST:event_radioPowiadomienie3ActionPerformed

    private void radioPowiadomienie1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_radioPowiadomienie1ActionPerformed
    {//GEN-HEADEREND:event_radioPowiadomienie1ActionPerformed
        spinnerPowiadomienie1.setEnabled(true);
        spinnerPowiadomienie2.setEnabled(true);
        spinnerPowiadomienie3.setEnabled(true);
        spinnerPowiadomienie4.setEnabled(false);
        spinnerPowiadomienie5.setEnabled(false);
        spinnerPowiadomienieData.setEnabled(false);
        checkPowiadomienieZapetlij.setEnabled(true);
    }//GEN-LAST:event_radioPowiadomienie1ActionPerformed

    private void checkPowiadomienieKomunikatActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_checkPowiadomienieKomunikatActionPerformed
    {//GEN-HEADEREND:event_checkPowiadomienieKomunikatActionPerformed
        if (checkPowiadomienieKomunikat.isSelected())
        {
            textPowiadomienieKomunikat.setVisible(true);
        }
        else
        {
            textPowiadomienieKomunikat.setVisible(false);
        }
    }//GEN-LAST:event_checkPowiadomienieKomunikatActionPerformed

    private void radioPowiadomienie2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_radioPowiadomienie2ActionPerformed
    {//GEN-HEADEREND:event_radioPowiadomienie2ActionPerformed
        spinnerPowiadomienie1.setEnabled(false);
        spinnerPowiadomienie2.setEnabled(false);
        spinnerPowiadomienie3.setEnabled(false);
        spinnerPowiadomienie4.setEnabled(true);
        spinnerPowiadomienie5.setEnabled(true);
        spinnerPowiadomienieData.setEnabled(false);
        checkPowiadomienieZapetlij.setEnabled(false);
        checkPowiadomienieZapetlij.setSelected(false);
    }//GEN-LAST:event_radioPowiadomienie2ActionPerformed

    private void buttonZatrzymajActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonZatrzymajActionPerformed
    {//GEN-HEADEREND:event_buttonZatrzymajActionPerformed
        if (sprPowiadomienie.isRunning())
        {
            zatrzymajDzialanie();
            
        }
        else
        {
            oknoGlowne.getPanelWylacz().zatrzymajDzialanie();
            oknoGlowne.getPanelAplikacje().zatrzymajDzialanie();
        }
    }//GEN-LAST:event_buttonZatrzymajActionPerformed

    private void buttonUruchomActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_buttonUruchomActionPerformed
    {//GEN-HEADEREND:event_buttonUruchomActionPerformed
        if (radioPowiadomienie1.isSelected())
        {
                timeToSec = (Integer) spinnerPowiadomienie1.getValue()*3600 + (Integer) spinnerPowiadomienie2.getValue()*60 + (Integer) spinnerPowiadomienie3.getValue();
                
                if (checkPowiadomienieDzwiek.isSelected() && 
                   checkPowiadomienieZapetlij.isSelected() &&
                   checkPowiadomienieKomunikat.isSelected() &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprPowiadomienie = new javax.swing.Timer(timeToSec*1000, (event) ->
                    {
                        java.awt.Toolkit.getDefaultToolkit().beep();
                        //javax.swing.JOptionPane.showMessageDialog(oknoGlowne, textPowiadomienieKomunikat.getText());
                        wyswietlPowiadomienie();
                       
                    });
                    odliczanie(timeToSec, checkPowiadomienieZapetlij.isSelected());
                    sprPowiadomienie.start();
                    funkcje.zmienButton(false);
                }
                else if (checkPowiadomienieDzwiek.isSelected()==false && 
                        checkPowiadomienieZapetlij.isSelected() &&
                        checkPowiadomienieKomunikat.isSelected() &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprPowiadomienie = new javax.swing.Timer(timeToSec*1000, (event) ->
                    {
//                        javax.swing.JOptionPane.showMessageDialog(oknoGlowne, textPowiadomienieKomunikat.getText());
                        wyswietlPowiadomienie();
                        
                        
                    });
                    odliczanie(timeToSec, checkPowiadomienieZapetlij.isSelected());
                    sprPowiadomienie.start();
                    //isRunning = true;
                    funkcje.zmienButton(false);
                }
                else if (checkPowiadomienieDzwiek.isSelected() && 
                        checkPowiadomienieZapetlij.isSelected()==false &&
                        checkPowiadomienieKomunikat.isSelected() &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprPowiadomienie = new javax.swing.Timer(timeToSec*1000, (event) ->
                    {
                        java.awt.Toolkit.getDefaultToolkit().beep();
//                        javax.swing.JOptionPane.showMessageDialog(oknoGlowne, textPowiadomienieKomunikat.getText());
                        wyswietlPowiadomienie();
                        funkcje.zmienButton(true);
                        oknoGlowne.getCzas().start();
                    });
                    odliczanie(timeToSec, checkPowiadomienieZapetlij.isSelected());
                    sprPowiadomienie.setRepeats(false);
                    sprPowiadomienie.start();
                    //isRunning = true;
                    funkcje.zmienButton(false);
                }
                else if (checkPowiadomienieDzwiek.isSelected() && 
                        checkPowiadomienieZapetlij.isSelected() &&
                        checkPowiadomienieKomunikat.isSelected()==false &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprPowiadomienie = new javax.swing.Timer(timeToSec*1000, (event) ->
                    {
                        java.awt.Toolkit.getDefaultToolkit().beep();
                        wyswietlPowiadomienie();
                        //isRunning = false;
                        
                    });
                    odliczanie(timeToSec, checkPowiadomienieZapetlij.isSelected());
                    sprPowiadomienie.start();
                    //isRunning = true;
                    funkcje.zmienButton(false);
                }
                else if (checkPowiadomienieDzwiek.isSelected()==false && 
                        checkPowiadomienieZapetlij.isSelected()==false &&
                        checkPowiadomienieKomunikat.isSelected()==false &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprPowiadomienie = new javax.swing.Timer(timeToSec*1000, (event) ->
                    {
//                        javax.swing.JOptionPane.showMessageDialog(oknoGlowne, "");
                        wyswietlPowiadomienie();
                        funkcje.zmienButton(true);
                        oknoGlowne.getCzas().start();
                    });
                    odliczanie(timeToSec, checkPowiadomienieZapetlij.isSelected());
                    sprPowiadomienie.setRepeats(false);
                    sprPowiadomienie.start();
                    //isRunning = true;
                    funkcje.zmienButton(false);
                }
                else if (checkPowiadomienieDzwiek.isSelected()==false && 
                   checkPowiadomienieZapetlij.isSelected()==false &&
                   checkPowiadomienieKomunikat.isSelected() &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    timeToSec = (Integer) spinnerPowiadomienie1.getValue()*3600 + (Integer) spinnerPowiadomienie2.getValue()*60 + (Integer) spinnerPowiadomienie3.getValue();
                    
                    sprPowiadomienie = new javax.swing.Timer(timeToSec*1000, (event) ->
                    {
                        //javax.swing.JOptionPane.showMessageDialog(oknoGlowne, textPowiadomienieKomunikat.getText());
                        wyswietlPowiadomienie();
                        funkcje.zmienButton(true);
                        oknoGlowne.getCzas().start();
                    });
                    odliczanie(timeToSec, checkPowiadomienieZapetlij.isSelected());
                    sprPowiadomienie.setRepeats(false);
                    sprPowiadomienie.start();
                    //isRunning = true;
                    funkcje.zmienButton(false);
                }
                else if (checkPowiadomienieDzwiek.isSelected() && 
                   checkPowiadomienieZapetlij.isSelected()==false &&
                   checkPowiadomienieKomunikat.isSelected()==false &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    timeToSec = (Integer) spinnerPowiadomienie1.getValue()*3600 + (Integer) spinnerPowiadomienie2.getValue()*60 + (Integer) spinnerPowiadomienie3.getValue();
                    
                    sprPowiadomienie = new javax.swing.Timer(timeToSec*1000, (event) ->
                    {
                        java.awt.Toolkit.getDefaultToolkit().beep();
//                        javax.swing.JOptionPane.showMessageDialog(oknoGlowne, "");
                        wyswietlPowiadomienie();
                        funkcje.zmienButton(true);
                        oknoGlowne.getCzas().start();
                    });
                    odliczanie(timeToSec, checkPowiadomienieZapetlij.isSelected());
                    sprPowiadomienie.setRepeats(false);
                    sprPowiadomienie.start();
                    funkcje.zmienButton(false);
                }
                else if (checkPowiadomienieDzwiek.isSelected()==false && 
                   checkPowiadomienieZapetlij.isSelected() &&
                   checkPowiadomienieKomunikat.isSelected()==false &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    timeToSec = (Integer) spinnerPowiadomienie1.getValue()*3600 + (Integer) spinnerPowiadomienie2.getValue()*60 + (Integer) spinnerPowiadomienie3.getValue();
                    
                    sprPowiadomienie = new javax.swing.Timer(timeToSec*1000, (event) ->
                    {
//                        javax.swing.JOptionPane.showMessageDialog(oknoGlowne, "");
                        wyswietlPowiadomienie();
                        
                    });
                    odliczanie(timeToSec, checkPowiadomienieZapetlij.isSelected());
                    sprPowiadomienie.start();
                    funkcje.zmienButton(false);
                }
                else if (checkPowiadomienieDzwiek.isSelected()==false && 
                   checkPowiadomienieZapetlij.isSelected()==false &&
                   checkPowiadomienieKomunikat.isSelected()==false &&
                   checkPowiadomienieSamDzwiek.isSelected())
                {
                    timeToSec = (Integer) spinnerPowiadomienie1.getValue()*3600 + (Integer) spinnerPowiadomienie2.getValue()*60 + (Integer) spinnerPowiadomienie3.getValue();
                    
                    sprPowiadomienie = new javax.swing.Timer(timeToSec*1000, (event) ->
                    {
                        java.awt.Toolkit.getDefaultToolkit().beep();
                        funkcje.zmienButton(true);
                        oknoGlowne.getCzas().start();
                        
                    });
                    odliczanie(timeToSec, checkPowiadomienieZapetlij.isSelected());
                    sprPowiadomienie.setRepeats(false);
                    sprPowiadomienie.start();
                    funkcje.zmienButton(false);
                }
                else if (checkPowiadomienieDzwiek.isSelected()==false && 
                   checkPowiadomienieZapetlij.isSelected() &&
                   checkPowiadomienieKomunikat.isSelected()==false &&
                   checkPowiadomienieSamDzwiek.isSelected())
                {
                    timeToSec = (Integer) spinnerPowiadomienie1.getValue()*3600 + (Integer) spinnerPowiadomienie2.getValue()*60 + (Integer) spinnerPowiadomienie3.getValue();
                    
                    sprPowiadomienie = new javax.swing.Timer(timeToSec*1000, (event) ->
                    {
                        java.awt.Toolkit.getDefaultToolkit().beep();
                        
                    });
                    odliczanie(timeToSec, checkPowiadomienieZapetlij.isSelected());
                    sprPowiadomienie.start();
                    funkcje.zmienButton(false);
                }
                
            }
            else if(radioPowiadomienie2.isSelected())
            {
                calendar = Calendar.getInstance();
                calendar.set(Calendar.HOUR_OF_DAY, (Integer) spinnerPowiadomienie4.getValue());
                calendar.set(Calendar.MINUTE, (Integer) spinnerPowiadomienie5.getValue());
                calendar.set(Calendar.SECOND, 0);
                
                if (checkPowiadomienieDzwiek.isSelected() &&
                    checkPowiadomienieKomunikat.isSelected() &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprawdzOpoznienie = funkcje.obliczCzas(calendar);
                    if (sprawdzOpoznienie > -1)
                    {
                        sprPowiadomienie = new javax.swing.Timer(sprawdzOpoznienie*1000, (event) ->
                        {
                            java.awt.Toolkit.getDefaultToolkit().beep();
                            //javax.swing.JOptionPane.showMessageDialog(oknoGlowne, textPowiadomienieKomunikat.getText());
                            wyswietlPowiadomienie();
                            funkcje.zmienButton(true);
                            oknoGlowne.getCzas().start();

                        });
                        odliczanie(sprawdzOpoznienie, false);
                        sprPowiadomienie.setRepeats(false);
                        sprPowiadomienie.start();
                        //isRunning = true;
                        funkcje.zmienButton(false);
                    }
                    
                }
                else if (checkPowiadomienieDzwiek.isSelected()==false &&
                    checkPowiadomienieKomunikat.isSelected()==false &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprawdzOpoznienie = funkcje.obliczCzas(calendar);
                    if (sprawdzOpoznienie > -1)
                    {
                        sprPowiadomienie = new javax.swing.Timer(sprawdzOpoznienie*1000, (event) ->
                        {
//                            javax.swing.JOptionPane.showMessageDialog(oknoGlowne, "");
                            wyswietlPowiadomienie();
                            funkcje.zmienButton(true);
                            oknoGlowne.getCzas().start();

                        });
                        odliczanie(sprawdzOpoznienie, false);
                        sprPowiadomienie.setRepeats(false);
                        sprPowiadomienie.start();
                        //isRunning = true;
                        funkcje.zmienButton(false);
                    }
                    
                }
                else if (checkPowiadomienieDzwiek.isSelected() &&
                    checkPowiadomienieKomunikat.isSelected()==false &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprawdzOpoznienie = funkcje.obliczCzas(calendar);
                    if (sprawdzOpoznienie > -1)
                    {
                        sprPowiadomienie = new javax.swing.Timer(sprawdzOpoznienie*1000, (event) ->
                        {
                            java.awt.Toolkit.getDefaultToolkit().beep();
//                            javax.swing.JOptionPane.showMessageDialog(oknoGlowne, "");
                            wyswietlPowiadomienie();
                            funkcje.zmienButton(true);
                            oknoGlowne.getCzas().start();

                        });
                        odliczanie(sprawdzOpoznienie, false);
                        sprPowiadomienie.setRepeats(false);
                        sprPowiadomienie.start();
                        //isRunning = true;
                        funkcje.zmienButton(false);
                    }
                    
                }
                else if (checkPowiadomienieDzwiek.isSelected()==false &&
                    checkPowiadomienieKomunikat.isSelected() &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprawdzOpoznienie = funkcje.obliczCzas(calendar);
                    if (sprawdzOpoznienie > -1)
                    {
                        sprPowiadomienie = new javax.swing.Timer(sprawdzOpoznienie*1000, (event) ->
                        {
//                            javax.swing.JOptionPane.showMessageDialog(oknoGlowne, textPowiadomienieKomunikat.getText());
                            wyswietlPowiadomienie();
                            funkcje.zmienButton(true);
                            oknoGlowne.getCzas().start();

                        });
                        odliczanie(sprawdzOpoznienie, false);
                        sprPowiadomienie.setRepeats(false);
                        sprPowiadomienie.start();
                        //isRunning = true;
                        funkcje.zmienButton(false);
                    }
                }
                else if (checkPowiadomienieDzwiek.isSelected()==false && 
                   checkPowiadomienieZapetlij.isSelected()==false &&
                   checkPowiadomienieKomunikat.isSelected()==false &&
                   checkPowiadomienieSamDzwiek.isSelected())
                {
                    sprawdzOpoznienie = funkcje.obliczCzas(calendar);
                    if (sprawdzOpoznienie > -1)
                    {
                        sprPowiadomienie = new javax.swing.Timer(sprawdzOpoznienie*1000, (event) ->
                        {
                            java.awt.Toolkit.getDefaultToolkit().beep();
                            //isRunning = false;
                            funkcje.zmienButton(true);
                            oknoGlowne.getCzas().start();

                        });
                        odliczanie(sprawdzOpoznienie, false);
                        sprPowiadomienie.setRepeats(false);
                        sprPowiadomienie.start();
                        //isRunning = true;
                        funkcje.zmienButton(false);
                    }
                }
            }
            else if(radioPowiadomienie3.isSelected())
            {
                calendar.setTime((Date) spinnerPowiadomienieData.getValue());
                
                if (checkPowiadomienieDzwiek.isSelected() &&
                    checkPowiadomienieKomunikat.isSelected() &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprawdzOpoznienie = funkcje.obliczCzas(calendar);
                    if (sprawdzOpoznienie > -1)
                    {
                        sprPowiadomienie = new javax.swing.Timer(sprawdzOpoznienie*1000, (event) ->
                        {

                            java.awt.Toolkit.getDefaultToolkit().beep();
//                            javax.swing.JOptionPane.showMessageDialog(oknoGlowne, textPowiadomienieKomunikat.getText());
                            wyswietlPowiadomienie();
                            funkcje.zmienButton(true);
                            oknoGlowne.getCzas().start();

                        });
                        odliczanie(sprawdzOpoznienie, false);
                        sprPowiadomienie.setRepeats(false);
                        sprPowiadomienie.start();
                        //isRunning = true;
                        funkcje.zmienButton(false);
                    }
                }
                else if (checkPowiadomienieDzwiek.isSelected()==false &&
                    checkPowiadomienieKomunikat.isSelected()==false &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprawdzOpoznienie = funkcje.obliczCzas(calendar);
                    if (sprawdzOpoznienie > -1)
                    {
                        sprPowiadomienie = new javax.swing.Timer(sprawdzOpoznienie*1000, (event) ->
                        {
//                            javax.swing.JOptionPane.showMessageDialog(oknoGlowne, "");
                            wyswietlPowiadomienie();
                            funkcje.zmienButton(true);
                            oknoGlowne.getCzas().start();

                        });
                        odliczanie(sprawdzOpoznienie, false);
                        sprPowiadomienie.setRepeats(false);
                        sprPowiadomienie.start();
                        //isRunning = true;
                        funkcje.zmienButton(false);
                    }
                }
                else if (checkPowiadomienieDzwiek.isSelected()==false &&
                    checkPowiadomienieKomunikat.isSelected()&&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprawdzOpoznienie = funkcje.obliczCzas(calendar);
                    if (sprawdzOpoznienie > -1)
                    {
                        sprPowiadomienie = new javax.swing.Timer(sprawdzOpoznienie*1000, (event) ->
                        {

//                            javax.swing.JOptionPane.showMessageDialog(oknoGlowne, textPowiadomienieKomunikat.getText());
                            wyswietlPowiadomienie();
                            funkcje.zmienButton(true);
                            oknoGlowne.getCzas().start();

                        });
                        odliczanie(sprawdzOpoznienie, false);
                        sprPowiadomienie.setRepeats(false);
                        sprPowiadomienie.start();
                        //isRunning = true;
                        funkcje.zmienButton(false);
                    }
                }
                else if (checkPowiadomienieDzwiek.isSelected() &&
                    checkPowiadomienieKomunikat.isSelected()==false &&
                    checkPowiadomienieSamDzwiek.isSelected()==false)
                {
                    sprawdzOpoznienie = funkcje.obliczCzas(calendar);
                    if (sprawdzOpoznienie > -1)
                    {
                        sprPowiadomienie = new javax.swing.Timer(sprawdzOpoznienie*1000, (event) ->
                        {

                            java.awt.Toolkit.getDefaultToolkit().beep();
//                            javax.swing.JOptionPane.showMessageDialog(oknoGlowne, "");
                            wyswietlPowiadomienie();
                            funkcje.zmienButton(true);
                            oknoGlowne.getCzas().start();

                        });
                        odliczanie(sprawdzOpoznienie, false);
                        sprPowiadomienie.setRepeats(false);
                        sprPowiadomienie.start();
                        //isRunning = true;
                        funkcje.zmienButton(false);
                    }
                }
                else if(checkPowiadomienieDzwiek.isSelected()==false && 
                   checkPowiadomienieZapetlij.isSelected()==false &&
                   checkPowiadomienieKomunikat.isSelected()==false &&
                   checkPowiadomienieSamDzwiek.isSelected())
                {
                    sprawdzOpoznienie = funkcje.obliczCzas(calendar);
                    if (sprawdzOpoznienie > -1)
                    {
                        sprPowiadomienie = new javax.swing.Timer(sprawdzOpoznienie*1000, (event) ->
                        {

                            java.awt.Toolkit.getDefaultToolkit().beep();
                            funkcje.zmienButton(true);
                            oknoGlowne.getCzas().start();

                        });
                        odliczanie(sprawdzOpoznienie, false);
                        sprPowiadomienie.setRepeats(false);
                        sprPowiadomienie.start();
                        //isRunning = true;
                        funkcje.zmienButton(false);
                    }
                }
            }
        
        if ((Integer) spinnerPowiadomienie2.getValue() != funkcje.getPrefMin() && radioPowiadomienie1.isSelected())
        {
            funkcje.setPrefMin((Integer) spinnerPowiadomienie2.getValue());
        }
        if ((Integer) spinnerPowiadomienie1.getValue() != funkcje.getPrefGodz() && radioPowiadomienie1.isSelected())
        {
            funkcje.setPrefGodz((Integer) spinnerPowiadomienie1.getValue());
        }
        
    }//GEN-LAST:event_buttonUruchomActionPerformed

    private void checkPowiadomienieSamDzwiekActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_checkPowiadomienieSamDzwiekActionPerformed
    {//GEN-HEADEREND:event_checkPowiadomienieSamDzwiekActionPerformed
        if (checkPowiadomienieSamDzwiek.isSelected() && radioPowiadomienie1.isSelected())
        {
            checkPowiadomienieDzwiek.setEnabled(false);
            checkPowiadomienieZapetlij.setEnabled(true);
            checkPowiadomienieKomunikat.setEnabled(false);
            
            checkPowiadomienieDzwiek.setSelected(false);
            checkPowiadomienieKomunikat.setSelected(false);
        }
        else if (checkPowiadomienieSamDzwiek.isSelected() && radioPowiadomienie1.isSelected()==false)
        {
            checkPowiadomienieDzwiek.setEnabled(false);
            checkPowiadomienieZapetlij.setEnabled(false);
            checkPowiadomienieKomunikat.setEnabled(false);
            
            checkPowiadomienieDzwiek.setSelected(false);
            checkPowiadomienieZapetlij.setSelected(false);
            checkPowiadomienieKomunikat.setSelected(false);
        }
        else if (checkPowiadomienieSamDzwiek.isSelected()==false && radioPowiadomienie1.isSelected())
        {
            checkPowiadomienieDzwiek.setEnabled(true);
            checkPowiadomienieZapetlij.setEnabled(true);
            checkPowiadomienieKomunikat.setEnabled(true);
        }
        else
        {
            checkPowiadomienieDzwiek.setEnabled(true);
            checkPowiadomienieZapetlij.setEnabled(false);
            checkPowiadomienieKomunikat.setEnabled(true);
            
            checkPowiadomienieZapetlij.setSelected(false);
        }
    }//GEN-LAST:event_checkPowiadomienieSamDzwiekActionPerformed

    private void wyswietlPowiadomienie()
    {
        if (okno != null)
        {
            okno.dispose();
        }
        
        okno = new OknoPowiadomienie();
        
        if (checkPowiadomienieKomunikat.isSelected())
        {
            okno.setKomunikat(textPowiadomienieKomunikat.getText());
        }
        
        okno.setVisible(true);
    }
    
    private void odliczanie(int timeToLeft, boolean zapetlij)
    {
        final int tab[] = new int[1];
        tab[0] = timeToLeft;
        oknoGlowne.getCzas().stop();
        
        odliczanie = new javax.swing.Timer(1000, (event) ->
        {
            oknoGlowne.getLabelGodzina().setText(funkcje.obliczPozostaly(tab[0]));
            if (tab[0] == 1 && zapetlij)
            {
                tab[0]=timeToLeft;
            }
            else if (tab[0] == 0 && zapetlij == false)
            {
                odliczanie.stop();
            }
            else
            {
                tab[0]-=1;
            }
            
        });
        odliczanie.setInitialDelay(0);
        odliczanie.start();
    }
    
    public void zatrzymajDzialanie()
    {
        sprPowiadomienie.stop();
        funkcje.zmienButton(true);
        odliczanie.stop();
        oknoGlowne.getCzas().start();
    }
    
    public JButton getButtonUruchom()
    {
        return buttonUruchom;
    }

    public JButton getButtonZatrzymaj()
    {
        return buttonZatrzymaj;
    }

    public JPanel getjPanel1()
    {
        return jPanel1;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonUruchom;
    private javax.swing.JButton buttonZatrzymaj;
    private javax.swing.JCheckBox checkPowiadomienieDzwiek;
    private javax.swing.JCheckBox checkPowiadomienieKomunikat;
    private javax.swing.JCheckBox checkPowiadomienieSamDzwiek;
    private javax.swing.JCheckBox checkPowiadomienieZapetlij;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JRadioButton radioPowiadomienie1;
    private javax.swing.JRadioButton radioPowiadomienie2;
    private javax.swing.JRadioButton radioPowiadomienie3;
    private javax.swing.ButtonGroup radioPowiadomienieGroup;
    private javax.swing.JSpinner spinnerPowiadomienie1;
    private javax.swing.JSpinner spinnerPowiadomienie2;
    private javax.swing.JSpinner spinnerPowiadomienie3;
    private javax.swing.JSpinner spinnerPowiadomienie4;
    private javax.swing.JSpinner spinnerPowiadomienie5;
    private javax.swing.JSpinner spinnerPowiadomienieData;
    private javax.swing.JTextField textPowiadomienieKomunikat;
    // End of variables declaration//GEN-END:variables
}
